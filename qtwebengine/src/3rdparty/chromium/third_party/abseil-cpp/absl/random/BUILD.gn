# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/abseil-cpp/absl.gni")

absl_source_set("random") {
  public = [ "random.h" ]
  deps = [
    ":distributions",
    ":seed_sequences",
    "../random/internal:nonsecure_base",
    "../random/internal:pcg_engine",
    "../random/internal:pool_urbg",
    "../random/internal:randen_engine",
  ]
}

absl_source_set("distributions") {
  public = [
    "bernoulli_distribution.h",
    "beta_distribution.h",
    "discrete_distribution.h",
    "distributions.h",
    "exponential_distribution.h",
    "gaussian_distribution.h",
    "log_uniform_int_distribution.h",
    "poisson_distribution.h",
    "uniform_int_distribution.h",
    "uniform_real_distribution.h",
    "zipf_distribution.h",
  ]
  sources = [
    "discrete_distribution.cc",
    "gaussian_distribution.cc",
  ]
  deps = [
    "../base:base_internal",
    "../base:config",
    "../base:core_headers",
    "../meta:type_traits",
    "../random/internal:distributions",
    "../random/internal:fast_uniform_bits",
    "../random/internal:fastmath",
    "../random/internal:generate_real",
    "../random/internal:iostream_state_saver",
    "../random/internal:traits",
    "../random/internal:uniform_helper",
    "../random/internal:wide_multiply",
    "../strings",
    "../types:span",
  ]
}

absl_source_set("seed_gen_exception") {
  public = [ "seed_gen_exception.h" ]
  sources = [ "seed_gen_exception.cc" ]
  deps = [ "../base:config" ]
}

absl_source_set("seed_sequences") {
  public = [ "seed_sequences.h" ]
  sources = [ "seed_sequences.cc" ]
  deps = [
    ":seed_gen_exception",
    "../container:inlined_vector",
    "../random/internal:nonsecure_base",
    "../random/internal:pool_urbg",
    "../random/internal:salted_seed_seq",
    "../random/internal:seed_material",
    "../types:span",
  ]
}

absl_source_set("bit_gen_ref") {
  public = [ "bit_gen_ref.h" ]
  deps = [
    "../base:core_headers",
    "../meta:type_traits",
    "../random/internal:distribution_caller",
    "../random/internal:fast_uniform_bits",
    "../random/internal:mocking_bit_gen_base",
  ]
}
