// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "url/mojom/origin.mojom";
import "third_party/blink/public/mojom/feature_policy/feature_policy_feature.mojom";
import "third_party/blink/public/mojom/feature_policy/policy_value.mojom";

// See http://www.whatwg.org/specs/web-apps/current-work/#attr-iframe-sandbox
// for a list of the sandbox flags.
[Extensible]
enum WebSandboxFlags {
  kNone                                  =     0,
  kNavigation                            =     1, // 1 << 0
  kPlugins                               =     2, // 1 << 1
  kOrigin                                =     4, // 1 << 2
  kForms                                 =     8, // 1 << 3
  kScripts                               =    16, // 1 << 4
  kTopNavigation                         =    32, // 1 << 5
  // See https://www.w3.org/Bugs/Public/show_bug.cgi?id=12393
  kPopups                                =    64, // 1 << 6
  kAutomaticFeatures                     =   128, // 1 << 7
  kPointerLock                           =   256, // 1 << 8
  // See
  // https://w3c.github.io/screen-orientation/#dfn-sandboxed-orientation-lock-browsing-context-flag.
  kDocumentDomain                        =   512, // 1 << 9
  kOrientationLock                       =  1024, // 1 << 10
  kPropagatesToAuxiliaryBrowsingContexts =  2048, // 1 << 11
  kModals                                =  4096, // 1 << 12
  // See
  // https://w3c.github.io/presentation-api/#sandboxing-and-the-allow-presentation-keyword
  kPresentationController                =  8192, // 1 << 13
  // See https://github.com/WICG/interventions/issues/42.
  kTopNavigationByUserActivation         = 16384, // 1 << 14
  // See https://crbug.com/539938
  kDownloads                             = 32768, // 1 << 15
  kStorageAccessByUserActivation         = 65536, // 1 << 16
  kAll                                   =    -1, // Masks all bits set to 1.
};

// This struct holds feature policy allowlist data that needs to be replicated
// between a RenderFrame and any of its associated RenderFrameProxies. A list of
// these form a ParsedFeaturePolicy.
// NOTE: These types are used for replication frame state between processes.
struct ParsedFeaturePolicyDeclaration {
  FeaturePolicyFeature feature;
  map<url.mojom.Origin, PolicyValue> values;
  PolicyValue fallback_value;
  PolicyValue opaque_value;
};
